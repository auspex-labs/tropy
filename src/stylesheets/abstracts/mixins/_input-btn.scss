@use "sass:map";
@use "../../themes/tropy" as *;

//
// Forms & buttons
// --------------------------------------------------

/* stylelint-disable custom-property-pattern */

@mixin input-btn-focus($focus: ":focus", $color: $input-btn-focus-color) {
  &#{$focus} {
    border-color: $color !important;
    box-shadow: 0 0 0 2px $color !important;
  }
}

@mixin form-shading-level($n) {
  ::-webkit-input-placeholder,
  .placeholder {
    color: map.get($form-level-shades, "level-#{$n}-placeholder-color");
  }

  fieldset {
    background-color: map.get($form-level-shades, "level-#{$n}-fieldset-bg");
  }

  .form-control,
  .btn-toggle:not(:has(:checked)) {
    border-color: map.get($form-level-shades, "level-#{$n}-border");
    background-color: map.get($form-level-shades, "level-#{$n}-bg");

    @include input-btn-focus;

    &[readonly],
    &[disabled],
    &.disabled,
    &.file-select {
      background-color: map.get($form-level-shades, "level-#{$n}-inpug-bg-readonly");
    }
  }

  .checkbox,
  .radio {
    [type] {
      background-color: map.get($form-level-shades, "level-#{$n}-bg");
      border-color: map.get($form-level-shades, "level-#{$n}-border");

      &:active {
        background-color: $checkbox-checked-bg;
        border-color: $checkbox-checked-border;
      }

      &[disabled] {
        background-color: map.get($form-level-shades, "level-#{$n}-input-bg-readonly");
        border-color: map.get($form-level-shades, "level-#{$n}-border");
      }

      &:checked {
        background-color: $checkbox-checked-bg;
        border-color: $checkbox-checked-border;

        &:active {
          background-color: $checkbox-checked-active-bg;
          border-color: $checkbox-checked-active-border;
        }

        &[disabled] {
          background-color: map.get($form-level-shades, "level-#{$n}-input-bg-readonly");
          border-color: map.get($form-level-shades, "level-#{$n}-border");

          &::before,
          &::after {
            background: $checkbox-checked-bg;
          }
        }
      }
    }
  }

  .btn-default {
    border-color: map.get($form-level-shades, "level-#{$n}-border");
    background-color: map.get($form-level-shades, "level-#{$n}-bg");

    &:active {
      background-color: map.get($form-level-shades, "level-#{$n}-btn-default-active-bg");
    }
  }
}
